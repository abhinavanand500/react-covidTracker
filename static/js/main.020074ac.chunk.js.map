{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","components/Footer.js","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/logo.png"],"names":["module","exports","Cards","data","confirmed","deaths","lastUpdate","recovered","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","active","url","fetchData","country","a","changableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barchart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Footer","style","marginTop","textAlign","height","justifyContent","href","App","state","fetchedData","setState","console","log","this","image","src","logo","alt","React","Component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.020074ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"active\":\"Cards_active__1mwzX\"};","import React from 'react';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nconst Cards = ({ data: { confirmed, deaths, lastUpdate, recovered } }) => {\n    if (!confirmed) {\n        return 'Loading'\n    }\n    return (\n\n        <div className={styles.container}>\n            <Grid container spacing={3} justify='center'>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color='textSecondary'> {new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant='body2'>Number of Total cases of COVID 19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.active)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Active</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0} end={confirmed.value - recovered.value - deaths.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color='textSecondary'> {new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant='body2'>Number of Active cases of COVID 19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Recovered</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color='textSecondary'> {new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant='body2'>Number of recoveries from COVID 19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Death</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color='textSecondary'> {new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant='body2'>Number of Death of COVID 19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n\n        </div>\n    );\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changableUrl = url;\n    if (country) {\n        changableUrl = `${url}/countries/${country}`\n    }\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changableUrl);\n        return { confirmed, recovered, deaths, lastUpdate }\n    } catch (error) {\n\n    }\n}\n\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`)\n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }))\n\n        return modifiedData;\n    } catch (error) {\n\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const { data: { countries } } = await axios.get(`${url}/countries`);\n        return countries.map((country) => country.name);\n    } catch (error) {\n\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api/index';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css'\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\n    const [dailyData, setDailyData] = useState([]);\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        fetchAPI();\n    }, [])\n    const lineChart = (\n        dailyData.length ?\n            (<Line\n                data={{\n                    labels: dailyData.map(({ date }) => date),\n                    datasets: [{\n                        data: dailyData.map(({ confirmed }) => confirmed),\n                        label: 'Infected',\n                        borderColor: '#3333ff',\n                        fill: true,\n                    }, {\n                        data: dailyData.map(({ deaths }) => deaths),\n                        label: 'Deaths',\n                        borderColor: 'red',\n                        backgroundColor: 'rgba(255,0,0,0.5)',\n                        fill: true,\n                    }],\n                }}\n            />) : null\n    );\n\n    const barchart =\n        (confirmed ? (\n            <Bar\n                data={{\n                    labels: ['Infected', 'Active', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: [\n                            'rgba(0, 0, 255, 0.5)',\n                            'rgb(0, 191, 255,0.5)',\n                            'rgba(0, 255, 0, 0.5)',\n                            'rgba(255, 0, 0, 0.5)',\n                        ],\n                        data: [confirmed.value, confirmed.value - recovered.value - deaths.value, recovered.value, deaths.value]\n                    }]\n                }}\n                options={{\n                    legend: { display: false },\n                    title: { display: true, text: `Current Country in ${country}` }\n                }}\n            />) : null);\n\n    return (\n        <div className={styles.container}>\n            {country ? barchart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api'\nconst CountryPicker = ({ handleCountryChange }) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n        fetchAPI();\n    }, [setFetchedCountries]);\n    // console.log(fetchedCountries);\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    );\n}\n\nexport default CountryPicker;","import React from 'react';\n\nconst Footer = () => {\n    return (\n        <footer style={{ marginTop: '40px', backgroundColor: '#33FFBD', textAlign: \"center\", height: '30px' }} >\n            <div style={{ justifyContent: 'center', marginTop: '10px' }}>© 2020 Copyright:\n            <a href=\"http://bloggify.pythonanywhere.com/\"> Abhinav Anand</a>\n            </div>\n\n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport Cards from './components/Cards/Cards';\nimport Chart from './components/Chart/Chart';\nimport CountryPicker from './components/CountryPicker/CountryPicker';\nimport { fetchData } from './api';\nimport styles from './App.module.css'\nimport logo from './images/logo.png'\nimport Footer from './components/Footer';\nclass App extends React.Component {\n    state = {\n        data: {},\n        country: '',\n    }\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n        this.setState({ data: fetchedData })\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        this.setState({ data: fetchedData, country: country })\n        console.log(fetchedData);\n    }\n\n    render() {\n        const { data, country } = this.state;\n        return (\n            <>\n                <div className className={styles.container}>\n                    <img className={styles.image} src={logo} alt='Covid 19' />\n                    <Cards data={data} />\n                    <CountryPicker handleCountryChange={this.handleCountryChange} />\n                    <Chart data={data} country={country} />\n                </div>\n                <Footer />\n            </>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.querySelector(\"#root\")\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/logo.d7265326.png\";"],"sourceRoot":""}